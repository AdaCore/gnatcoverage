In addition to expressions that directly influence control constructs, the
tool shall recognize as a decision any expression that features at least two
conditions combined with and-then or or-else short-circuit operators. We
denote these as "complex" expressions, which need not appear within explicit
control constructs to be recognized as decisions. Examples of extra contexts
where complex expressions are recognized as decisions include the right-hand
side of an assignment statement, active assertion pragmas, or

All the base "decision" chapter requirements apply to the full set of
decisions as defined here, and in addition:

#. For decisions evaluated both True and False, the tool shall report every
   condition for which the independent effect was not demonstrated. Such
   condition specific diagnotics shall designate the particular condition
   source location.

#. The tool shall be able to handle arbitrarily complex decisions in any
   context where such expressions might appear.

**Testing Strategy**

We check that all the aspects of this requirement are satisfied in a variety
of situations:

* With expressions involving different kinds of operands, not only
  straight boolean variables [Operands].

* With expressions of different shapes placed in various contexts, to
  verify the tool's capability to handle arbitrary expressions everywhere
  they might appear [ShapesAndContexts];

We exercise each decision of interest in multiple manners, always including

* a set of vectors where the decision evaluates only True,

* a set of vectors where the decision evaluates only False,

* sets of vectors where the decision evaluates both True and False, with
  at least

  * one set not demonstrating the independent effect of any condition,
  * one set demonstrating the independent effect of each condition alone,
  * one set demonstrating the independent effect of all the conditions.

* a situation where the statements exposing the decision aren't
  executed at all.

