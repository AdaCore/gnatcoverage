# This bit is used to make sure we don't run too many pipelines:
# don't run the branch CI when a merge request is already open for the
# branch.
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    - when: always

variables:
#  These are not needed at the moment, but will be useful when we migrate
#  to a multi-stage pipeline.
#  PACKAGE_BASENAME: gnatcoverage.tar.gz
#  PACKAGE: $CI_PROJECT_DIR/$PACKAGE_BASENAME
#  PACKAGE_REPOSITORY_PROJECT: eng/cov/ci-packages
#  CI_FRAGMENTS: ci-fragments
#  CI_FRAGMENTS_GIT: https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/eng/it/$CI_FRAGMENTS
  GNATCOVERAGE_EXTRA_GIT: https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/eng/cov/gnatcoverage-extra

stages:
  - build_and_test


build_and_test:
  services:
     - image:sandbox
     - cpu:8
     - mem:16
  stage: build_and_test
  script:
    - env
    - . ~/.aws_container_credentials
    - export PATH=/it/e3/bin:$PATH

    # Get the gnatcoverage-extra repository. If we're testing a 'sync/' branch,
    # expect the same for that repo.
    - cd /tmp
    - EXTRA_BRANCH=master
    - if [[ $CI_COMMIT_BRANCH =~ ^sync/ ]]; then
         EXTRA_BRANCH=$CI_COMMIT_BRANCH;
      elif [[ $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ ^sync/ ]]; then
         EXTRA_BRANCH=$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME;
      fi
    - git clone $GNATCOVERAGE_EXTRA_GIT -b $EXTRA_BRANCH

    # Setup the anod sandbox repositories

    - cd /it/wave
    - anod vcs --add-repo gnatcoverage $CI_PROJECT_DIR
    - anod vcs --add-repo gnatcoverage-extra /tmp/gnatcoverage-extra

    # Build using anod
    - anod build --minimal gnatcov --qualifier=no-c

    # Test using anod
    - anod test gnatcov --qualifier=-O0
    - e3-testsuite-report
        --failure-exit-code 1
        --xunit-output /tmp/xunit_output_O0.xml
        --xunit-name O0
         x86_64-linux/gnatcov-O0-test/results/new/

    - anod test gnatcov --qualifier=src-traces
    - e3-testsuite-report
        --failure-exit-code 1
        --xunit-output /tmp/xunit_output_src-traces.xml
        --xunit-name src-traces
      x86_64-linux/gnatcov-src-traces-test/results/new/

    - anod test gnatcov --qualifier=spark-tests,src-traces
    - e3-testsuite-report
        --failure-exit-code 1
        --xunit-output /tmp/xunit_output_spark.xml
        --xunit-name spark
      x86_64-linux/gnatcov-spark-tests-src-traces-test/results/new/

    - cp /tmp/xunit_output*.xml $CI_PROJECT_DIR

  artifacts:
    when: always
    paths:
      - xunit_output_O0.xml
      - xunit_output_src-traces.xml
      - xunit_output_spark.xml
    reports:
      junit: "xunit_output*.xml"
