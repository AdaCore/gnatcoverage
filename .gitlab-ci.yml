workflow:
  rules:
    # Run the CI on merge requests only
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

variables:
   PACKAGE_BASE_NAME: gnatcoverage.tar.gz
   PACKAGE_ABSOLUTE_NAME: $CI_PROJECT_DIR/$PACKAGE_BASE_NAME

.basic_setup: &basic_setup
  - unset GITLAB_TOKEN
  - generic_anod_ci --add-dep eng/das/cov/gnatcoverage-extra
  - cat /tmp/ci_env.sh
  - . /tmp/ci_env.sh

stages:
  - build
  - test

build:
  interruptible: true
  services:
     - image:e3
     - cpu:16
     - mem:16
  stage: build
  script:
    - require_issue
    - *basic_setup
    # Build using anod
    - anod install gnatcov $ACI_TRACK_QUALIFIER --latest
    - anod build --minimal gnatcov -Qinstr $ACI_TRACK_QUALIFIER

    # Package all components created so far
    - anod-copy-components --standalone-export $ANOD_DEFAULT_SANDBOX_DIR $ANOD_DEFAULT_SANDBOX_DIR/exp-comps
    - tar czf $PACKAGE_ABSOLUTE_NAME -C / $ANOD_DEFAULT_SANDBOX_DIR/exp-comps

    - cd $CI_PROJECT_DIR
    - ls -l $PACKAGE_BASE_NAME

  artifacts:
    paths:
      - $PACKAGE_BASE_NAME

build_docs:
  stage: build
  services:
     - image:e3
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || ($CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
      changes:
        - doc/**/*
      when: always
  script:
    - *basic_setup
    - anod build gnatdas-doc --latest
    - mv $ANOD_DEFAULT_SANDBOX_DIR/x86_64-linux/gnatdas-doc/install/share/doc/gnatdas/ $CI_PROJECT_DIR
  artifacts:
    when:
      always
    paths:
      - gnatdas/pdf/gnatdas.pdf
      - gnatdas/html

build_community:
  interruptible: true
  services:
     - image:e3
     - cpu:8
     - mem:16
  stage: test
  script:
    - *basic_setup
    # Build using anod
    - anod build --minimal gnatcov -Qno-c $ACI_TRACK_QUALIFIER $ACI_TRACK_QUALIFIER

.common_test_bits: &basic_test_setup
    # Setup the sandbox
    - *basic_setup

    # Import components from the artifact and install the instrumented gnatcov,
    # then remove temporaries to save disk space.
    - tar zxf $PACKAGE_ABSOLUTE_NAME -C /
    - anod-copy-components $ANOD_DEFAULT_SANDBOX_DIR/exp-comps $ANOD_DEFAULT_SANDBOX_DIR
    - anod install gnatcov -Qinstr $ACI_TRACK_QUALIFIER
    - rm -rf $PACKAGE_ABSOLUTE_NAME $ANOD_DEFAULT_SANDBOX_DIR/exp-comps

    # Setup the CI directory to host coverage results
    - mkdir $CI_PROJECT_DIR/coverage


.common_artifacts_bits: &artifacts
  artifacts:
    paths:
      - xunit_output.xml
      - coverage/cobertura.xml

    reports:
      junit: xunit_output.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura.xml

test_bin_traces:
  interruptible: true
  services:
     - image:e3
     - cpu:16
     - mem:16
  stage: test
  script:
    - *basic_test_setup

    # Test using anod
    - anod test gnatcov --minimal --target=leon3-elf,,qemu -QRTS=embedded-leon3,-O0,instr $ACI_TRACK_QUALIFIER
    - TEST_BSN=$(anod eval --primitive=test gnatcov --target=leon3-elf,,qemu -QRTS=embedded-leon3,-O0,instr $ACI_TRACK_QUALIFIER build_space_name)
    - mv $ANOD_DEFAULT_SANDBOX_DIR/leon3-elf-linux64/$TEST_BSN/test/coverage/cobertura.xml $CI_PROJECT_DIR/coverage/cobertura.xml
    - e3-testsuite-report
        --failure-exit-code 1
        --xunit-output $CI_PROJECT_DIR/xunit_output.xml
        --xunit-name bin-traces
        $ANOD_DEFAULT_SANDBOX_DIR/leon3-elf-linux64/$TEST_BSN/results/new/

  <<: *artifacts

test_src_traces:
  interruptible: true
  services:
     - image:e3
     - cpu:16
     - mem:16
  stage: test
  script:
    - *basic_test_setup

    # Test using anod
    - anod test gnatcov --minimal -Qsrc-traces,instr $ACI_TRACK_QUALIFIER
    - TEST_BSN=$(anod eval --primitive=test gnatcov -Qsrc-traces,instr $ACI_TRACK_QUALIFIER build_space_name)
    - mv $ANOD_DEFAULT_SANDBOX_DIR/x86_64-linux/$TEST_BSN/test/coverage/cobertura.xml $CI_PROJECT_DIR/coverage/cobertura.xml
    - e3-testsuite-report
        --failure-exit-code 1
        --xunit-output $CI_PROJECT_DIR/xunit_output.xml
        --xunit-name src-traces
        $ANOD_DEFAULT_SANDBOX_DIR/x86_64-linux/$TEST_BSN/results/new/

  <<: *artifacts

test_spark:
  interruptible: true
  services:
     - image:e3
     - cpu:16
     - mem:16
  stage: test
  script:
    - *basic_test_setup

    # Test using anod
    - anod test gnatcov --minimal -Qspark-tests,src-traces,instr $ACI_TRACK_QUALIFIER
    - TEST_BSN=$(anod eval --primitive=test gnatcov -Qspark-tests,src-traces,instr $ACI_TRACK_QUALIFIER build_space_name)
    - mv $ANOD_DEFAULT_SANDBOX_DIR/x86_64-linux/$TEST_BSN/test/coverage/cobertura.xml $CI_PROJECT_DIR/coverage/cobertura.xml
    - e3-testsuite-report
        --failure-exit-code 1
        --xunit-output $CI_PROJECT_DIR/xunit_output.xml
        --xunit-name spark
        $ANOD_DEFAULT_SANDBOX_DIR/x86_64-linux/$TEST_BSN/results/new/

  <<: *artifacts
