project Support is

   type Target_Type is ("native", "powerpc-elf");
   Target : Target_Type := external ("TARGET", "powerpc-elf");

   type Yes_No_Type is ("yes", "no");
   Use_AUnit : Yes_No_Type := external ("UNITTEST", "no");
   Do_Build  : Yes_No_Type := external ("BUILD", "no");

   case Target is
      when "native" =>
         for Languages use ("Ada");
         for Source_Dirs use ("src");
      when others =>
         for Languages use ("Ada", "C");
         for Source_Dirs use ("src", "src/" & Target);
   end case;

   case Use_AUnit is
      when "no" =>
         for Source_Dirs use Project'Source_Dirs & ("src/last_chance");
      when "yes" =>
   end case;

   for Object_Dir use "obj/" & Target;
   for Library_Kind use "static";
   for Library_Auto_Init use "False";
   for Library_Dir use "lib/" & Target;

   case Use_AUnit is
      when "yes" =>
         for Library_Name use "supportaunit";
      when "no" =>
         for Library_name use "support";
   end case;

   case Target is
      when "native" =>
      when others =>
         for Library_Options use
           (Project'Library_Dir & "/start.o",
            "-Wl,-T../../../support/" & Project'Library_Dir & "/gnu.ld",
            "-nostdlib");
   end case;

   case Do_Build is
      when "yes" =>
         for Externally_Built use "false";
      when "no" =>
         for Externally_Built use "true";
   end case;

   package Builder is
      case Do_Build is
         when "yes" =>
            for Global_Configuration_Pragmas use "zfp.adc";
         when "no" =>
      end case;
   end Builder;

   package Linker is
      for Linker_Options use Project'Library_Options & ("-g");
   end Linker;

   package Compiler is
      for Default_Switches ("C") use ("-g", "-O1", "-fpreserve-control-flow");
      for Default_Switches ("Ada") use
        Compiler'Default_Switches("C") & ("-gnatp", "-gnaty", "-gnatw.Xe");
   end Compiler;

   package IDE is
      case Target is
         when "powerpc-elf" =>
            for Compiler_Command ("Ada") use "powerpc-elf-gnatmake";
            for Compiler_Command ("C") use "powerpc-elf-gcc";
            for Gnatlist use "powerpc-elf-gnatls";
            for Gnat use "powerpc-elf-gnat";
            for Debugger_Command use "powerpc-elf-gdb";
         when "native" =>
            for Compiler_Command ("Ada") use "gnatmake";
            for Compiler_Command ("C") use "gcc";
            for Gnatlist use "gnatls";
            for Gnat use "gnat";
            for Debugger_Command use "gdb";
      end case;
   end IDE;

end Support;

