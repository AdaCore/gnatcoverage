-- =================================================================
-- == GPR file to build and use the support library for examples, ==
-- == with startup/init and minimum IO services                   ==
-- =================================================================

with "common";

library project Libsupport is

   Do_Build  : Common.Yes_No_Type := external ("BUILD", "no");
   --  Whether we're using this file to build the library or to link
   --  with it.

   Use_AUnit : Common.Yes_No_Type := external ("UNITTEST", "no");
   --  Whether we are building/using for an Aunit context or not, with
   --  influence on the last_chance handler inclusion.

   --  Common library attributes:
   --  ==========================

   for Library_Kind use "static";
   for Library_Auto_Init use "False";
   for Languages use ("Ada", "C");
   
   case Common.Target is
      when "unspecified" =>
         Do_Build := "no";
         for Library_Dir use "lib";
         for Library_Name use "dummy";

      when others =>
      
         --  Let each target provide additional sources as needed. FOR SELDOM
         --  USES ONLY. We don't wan't yet another zfp support approx here.

         case Common.Target is
           when "unspecified" => null;
           when others =>
              for Source_Dirs use ("src", "src/" & Common.Target);
         end case;

         for Library_Dir use "lib/" & Common.Target;
         for Object_Dir use "obj/" & Common.Target;

         --  Aunit has its own last chance handler that we must not override.
         --  We might also have needs for both aunit and !aunit libs for a run
         --  so pick a different libname for each case:

         case Use_AUnit is
           when "yes" =>
              for Library_Name use "supportaunit";

           when "no" =>
	      for Library_name use "support";

              for Source_Dirs use ("src", "src/last_chance");

              --  Termination on some boards incur very specific protocols
              --  that the target RTS might not support. Allow for board specific
              --  overrides of the last chance handler:

              case Common.Board is
                when "unspecified" => null;
                when others =>
                   for Source_Dirs use ("src", "src/last_chance_" & Common.Board);
              end case;
         end case;

   end case;

   case Do_Build is
      when "no"  => for Externally_Built use "true";
      when "yes" => for Externally_Built use "false";
   end case;

   --  Make sure recursive project file inclusions don't get
   --  to produce reports for parts of this support lib, never
   --  relevant to test results.

   package Coverage is
     for Units use ();
   end Coverage;

end Libsupport;
