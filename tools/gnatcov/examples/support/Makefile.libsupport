# Simple makefile for building the support library for tests and examples.

include Makefile.common

# Tailored compilation options for libsupport. Allow source
# coverage analysis with binary traces by default.
LIBSUPPORT_CFLAGS=-fdump-scos -fpreserve-control-flow -g


all: $(SUPPORT_TARGET_SRC_DIR) $(LIBSUPPORT_DIR) LIBSUPPORT LCH

# ----------------------------------------------------------------------------

# To provide a single spot of control shared between build time and use time,
# latch the libsupport configuration parameters as a set of variables in a
# "conf.gpr" project file rather than have them controlled with externals.

# Pick a default kind of silent last chance handler, that users of this
# Makefile can override if needed, e.g. for VxWorks kinds of configurations
# which are cross targets with "full" runtimes akin to native profiles.
SILENT_LCH = $(strip $(if $(TARGET), abort, exit))

conf.gpr: force
	sed -e 's/%TARGET%/$(TARGET)/g' \
	    -e 's/%BOARD%/$(BOARD)/g' \
	    -e 's/%SILENT_LCH%/$(SILENT_LCH)/g' \
	    < conf-template.gpr > $@

# ----------------------------------------------------------------------------

# In addition to the library where the constructed library should go, make
# sure the target specific support source dir exists.  It might legitimately
# be empty when the RTSes for target all have what we need, and might not be
# in our SCM system in this case:

$(SUPPORT_TARGET_SRC_DIR) $(LIBSUPPORT_DIR):
	mkdir -p $@

LIBSUPPORT: conf.gpr force
	$(BUILDER) -XLIBSUPPORT_BUILD=yes -p -Plibsupport.gpr -f \
                   -cargs $(LIBSUPPORT_CFLAGS)
	$(BUILDER) -XLIBSUPPORT_BUILD=yes -p -Plibsupport.gpr -f \
                   -XUNITTEST=yes \
                   -cargs $(LIBSUPPORT_CFLAGS)

LCH: conf.gpr force
	$(BUILDER) -XLIBSUPPORT_BUILD=yes -p -Plch.gpr -f \
                   -cargs $(LIBSUPPORT_CFLAGS)

clean:
	$(RM) -rf lib obj

.PHONY: force clean LIBSUPPORT LCH
