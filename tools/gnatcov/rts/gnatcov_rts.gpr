--  Instrumentation runtime for gnatcov.
--
--  This project is meant to be built and installed before instrumenting
--  projects with "gnatcov instrument", and then to be used when building
--  instrumented programs thanks to gprbuild's --implicit-with option.
--
--  As all Ada/C language runtimes have different capabilities, this project is
--  configurable through external variables (gprbuild -X options) to select
--  which units should be included/excluded from the instrumentation runtime.
--  See the "Configuration declarations" section below for the list of
--  available configurations.

library project GNATcov_RTS is

   Project_Name := external ("GNATCOV_RTS_PROJECT_NAME", "gnatcov_rts");
   --  Name of this project. This can be something else than "gnatcov_rts"
   --  in the case of project extension: in that case we want to use the name
   --  of the extending project.

   type Boolean is ("false", "true");
   type RTS_Profile_Type is ("full", "embedded");

   --------------------------------
   -- Configuration declarations --
   --------------------------------

   With_Ada : Boolean := external ("GNATCOV_RTS_WITH_ADA", "true");
   --  Whether to include Ada units in this project. Necessary when
   --  instrumenting Ada code.
   --
   --  Note that when Ada support is enabled, we provide the stdout-base64
   --  implementation helpers declared in gnatcov_rts_c-base_io.h in the
   --  GNATcov_RTS.Base_IO unit (itself implemented on top of the Ada runtime).
   --  When Ada support is disabled, we provide these helpers in the
   --  gnatcov_rts_c-base_io.c C unit instead (implemented on top of libc's
   --  stdout/fwrite/putchar).

   For_CCG : Boolean := external ("GNATCOV_RTS_FOR_CCG", "false");
   --  Whether to configure the project for compilation with CCG. This means
   --  excluding C from the source languages, as there is no C compiler for that
   --  environment and C sources need to be managed manually.

   RTS_Profile : RTS_Profile_Type :=
     external ("GNATCOV_RTS_RTS_PROFILE", "full");

   -------------------------
   -- Configuration logic --
   -------------------------

   Languages := ();
   Excluded_Source_Files := ();

   --  Compute the set of languages for this project. When Ada is enabled,
   --  exclude the C implementation for stdout output primitives.

   case With_Ada is
      when "false" =>
         Languages := ("C");
      when "true"  =>
         Languages := ("Ada");
         case For_CCG is
            when "true"  => null;
            when "false" =>
               Excluded_Source_Files :=
                  Excluded_Source_Files & ("gnatcov_rts_c-base_io.c");
               Languages := Languages & ("C");
         end case;
   end case;

   --  If the runtime does not have support to create files, exclude units that
   --  depend on that feature.

   case RTS_Profile is
      when "embedded" =>
         Excluded_Source_Files :=
           Excluded_Source_Files
           & ("gnatcov_rts-traces-output-files.adb",
              "gnatcov_rts-traces-output-files.ads");
         case For_CCG is
            when "true"  => null;
            when "false" =>
               Excluded_Source_Files :=
                 Excluded_Source_Files
                 & ("gnatcov_rts_c-os_interface.c",
                    "gnatcov_rts_c-os_interface.h",
                    "gnatcov_rts_c-traces-output-files.c",
                    "gnatcov_rts_c-traces-output-files.h");
         end case;
      when "full" => null;
   end case;

   ------------
   -- Common --
   ------------

   --  If the target supports relocatable libraries, this project should be
   --  built and installed once for each library kind.

   type Any_Library_Type is ("static", "relocatable", "static-pic");
   Library_Type : Any_Library_Type := external ("LIBRARY_TYPE", "static");

   for Languages use Languages;
   for Library_Name use "gnatcov_rts";
   for Library_Kind use Library_Type;
   for Library_Dir use "lib-gnatcov_rts." & Library_Type;
   for Object_Dir use "obj-gnatcov_rts." & Library_Type;

   for Source_Dirs use (".");
   for Excluded_Source_Files use Excluded_Source_Files;

   package Compiler is
      C_Extra_Switches := ();
      case RTS_Profile is
         when "embedded" =>

           --  The rts for the embedded profile needs to remain compilable
           --  in "freestanding" environments, where we might not have a libc
           --  at hand.

            C_Extra_Switches := ("-ffreestanding");
         when "full" =>
            null;
      end case;

      for Default_Switches ("C") use
         ("-O2", "-g", "-Wall", "-Wextra") & C_Extra_Switches;
      for Default_Switches ("Ada") use ("-O2", "-g", "-gnatwa");
   end Compiler;

   package Install is
      for Artifacts ("share/gnatcov_rts") use
        ("setup-config-" & Project_Name & ".json");
   end Install;

end GNATcov_RTS;
