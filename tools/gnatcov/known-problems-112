============================================
Known problems in GNATcoverage version 1.1.2
============================================

Copyright (C) 2013, AdaCore

The following is a listing of known problems in release 1.1.2. All these
problems have been corrected in 1.2 wavefronts starting from date designated
in the "Status" indication.

KP-112-M711-039 Spurious complaint about missing branch for constant condition

  Problem:    During decision or mcdc analysis, gnatcov complains about
              missing conditional branches for conditions that happen to have
              known at compile time values, such as a direct reference to a
              constant identifier for example.

  Status:     This was fixed in 1.2 on 2013-08-22

  Workaround: Modify the source code so the problematic conditions aren't
              known at compile time any more.

KP-112-M704-044 gnatcov abort on .ali file for subunit

  Problem:    gnatcov coverage aborts on with a "key already in map"
              Constraint_Error when queried to process SCOs coming from a
              subunit ALI file in addition to those for the corresponding
              main unit.

  Status:     This was fixed in 1.2 on 2013-07-10

  Workaround: Arrange to exclude the subunit ALI file from the set passed
              to gnatcov. ALIs for subunits are identifiable by the presence
              of a "NO" keyword on the P line within the file.

KP-112-M627-058 Memory leak while producing html+ report

  Problem:    gnatcov coverage leaks small amounts of memory while producing
              the annotated source lines of html+ reports. This may lead to
              system memory exhaustion for large reports, typcially with tens
              of thousands of annotated lines to produce.

  Status:     This was fixed in 1.2 on 2013-06-28

  Workaround: Generate an alternate output format or focus the analysis
              on a smaller set of program units.

KP-112-M425-007 Extreme coverage computation time with large debug info

  Problem:    gnatcov coverage appears to be running an infinite active loop
              while processing a trace associated with an executable featuring
              a very large debug info section (hundreds of megabytes). The
              process nevertheless converges after several hours.

  Status:     This was fixed in 1.2 on 2013-04-26

  Workaround: Wait long enough or run gnatcov coverage on a faster machine

