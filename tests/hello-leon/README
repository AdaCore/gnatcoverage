Quick tutorial on using Qemu for leon
*************************************

This tutorial shows how to compile an interrative example and run it on qemu.

1) Compiling the example.

The example consists of 3 small ada units:
* hello.adb, the main subprogram.
* uart.ads and uart.adb which does the I/O using the uart.

To compile, simply invoke gnatmake:

 leon-elf-gnatmake -O --RTS=ravenscar-sfp hello

The option '-O' is used to optimize the code generated,
the option '--RTS=ravenscar-sfp' selects the small foot print ravenscar profile
and 'hello' is the name of the main unit.

2) Running the example.

With xcov (the coverage tool):

  xcov --run --target=leon-elf hello

Or running directly qemu:

  qemu-system-sparc -M at697 -nographic -kernel hello

Qemu will automatically load the ELF file (hello) and start execution at the
entry point.

Here is a quick run scenario:

Menu:
1) Hello
2) Bye
3) Quit
You choice: 
1
hello
Menu:
1) Hello
2) Bye
3) Quit
You choice: 
2
bye
Menu:
1) Hello
2) Bye
3) Quit
You choice: 
3
qemu: fatal: Trap 0x80 while interrupts disabled, Error state

(The double trap which is an error is used to stop the simulator).



3) Redirecting the uart.

It is possible to redirect the uart to a tcp port:

  qemu-system-sparc -M at697 -nographic -kernel hello -serial tcp::1234,server

This will redirect uart1 to the tcp port 1234 of localhost.  With the 'server'
option, qemu will wait for the tcp connection.
